/*
    Задание 1. Симулятор проведения операций

    Реализуйте простой симулятор проведения медицинской операции у пациента. Пользователь выступает в роли хирурга,
который запрашивает инструменты у ассистента и применяет их сообразно ситуации.
    Пользователь взаимодействует с программой с помощью команд. Команды не имеют сложной встроенной логики: они просто
принимают нужные данные в качестве аргументов и выводят сообщения в консоль о выполнении. Данные команд — это одна или
две двумерные точки в формате double с координатами X и Y соответственно.

    scalpel — принимает на вход две двумерные координаты начала и конца разреза или линии отсечения. При выполнении этой
команды в консоль выводится сообщение о том, что был сделан разрез между введёнными координатами.

    Hemostat — эта команда принимает на вход одну точку, в которой требуется сделать зажим, о чём также сообщает в консоль.

    Tweezers — пинцет, как и зажим, принимает одну точку для применения. Сообщение об этом выводится в консоль.

    suture — команда хирургической иглы, которая делает шов между двумя указанными точками.

    Операция всегда начинается с команды Scalpel и заканчивается командой Suture. Для окончания работы программы их
параметры-точки при этом должны совпасть.

    Программу требуется реализовать именно с помощью одного заголовочного файла и одного файла с исходным кодом (cpp).
В заголовочном файле должны находиться функции-инструменты. В основном файле — основная логика программы, обработка
ввода пользователя.

    Советы и рекомендации
    Для удобства создайте структуру с типом двумерной координаты (точки) вместе с набором функций для ввода этой
координаты из консоли, её вывода в консоль и сравнения на предмет равенства. Для этих целей удобнее всего создать ещё
один заголовочный файл.
 */

#include <iostream>
#include "incision.h"

void Input (std::string& command) {
    std::cout << "Available commands: scalpel, hemostat, tweezers, suture." << std::endl;
    do {
        std::cout << "Enter the command: ";
        std::cin >> command;
    }
    while ( !(command == "scalpel" || command == "hemostat" || command == "tweezers" || command == "suture"));
}

int main() {
    Incision incision;
    std::string command;

    do {
        std::cout << "The operation starts with a cut (\"scalpel\" command)." << std::endl;
        Input( command);
    }
    while (command != "scalpel");
    Scalpel( incision);

    do {
        Input( command);

        if (command == "scalpel") {
            std::cout << "The cut has already been made." << std::endl;
        }
        else if (command == "hemostat") {
            Hemostat();
        }
        else if (command == "tweezers") {
            Tweezers();
        }
        else {
            Suture( incision);
        }
    }
    while (command != "suture");

    std::cout << "Operation completed!" << std::endl;

    return 0;
}
